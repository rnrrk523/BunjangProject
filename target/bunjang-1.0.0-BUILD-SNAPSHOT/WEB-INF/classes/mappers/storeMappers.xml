<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StoreMapper">
  <select id="getStoreInfo" resultType="com.sh.dto.StoreInfoDto">
    <![CDATA[
    	SELECT  s.store_idx AS "storeIdx",
		        s.store_name AS "storeName",
		        s.introduction AS "introduction",
		        s.open_date AS "openDate",
		        CASE 
		            WHEN (SYSDATE - s.open_date) * 24 * 60 * 60 < 60 THEN 
		                TO_CHAR(FLOOR((SYSDATE - s.open_date) * 24 * 60 * 60)) || '초 전'
		            WHEN (SYSDATE - s.open_date) * 24 * 60 < 60 THEN 
		                TO_CHAR(FLOOR((SYSDATE - s.open_date) * 24 * 60)) || '분 전'
		            WHEN (SYSDATE - s.open_date) * 24 < 24 THEN 
		                TO_CHAR(FLOOR((SYSDATE - s.open_date) * 24)) || '시간 전'
		            WHEN SYSDATE - s.open_date >= 7 AND SYSDATE - s.open_date < 30 THEN 
		                TO_CHAR(FLOOR((SYSDATE - s.open_date) / 7)) || '주 전'
		            WHEN SYSDATE - s.open_date >= 30 AND SYSDATE - s.open_date < 365 THEN 
		                TO_CHAR(FLOOR((SYSDATE - s.open_date) / 30)) || '달 전'
		            WHEN SYSDATE - s.open_date >= 365 THEN 
		                TO_CHAR(FLOOR((SYSDATE - s.open_date) / 365)) || '년 전'
		            ELSE 
		                TO_CHAR(FLOOR(SYSDATE - s.open_date)) || '일 전'
		        END AS "elapsedDate"
		FROM    store s
		WHERE   s.store_idx = #{storeIdx}
    ]]>
  </select>
  <select id="getProductCnt" resultType="Integer">
    <![CDATA[
    	SELECT  COUNT(store_idx) AS "productCnt"
		FROM    product
		WHERE   store_idx = #{storeIdx}
    ]]>
  </select>
  <select id="getFollowCnt" resultType="Integer">
    <![CDATA[
    	SELECT  COUNT(store_idx) AS "followCnt"
		FROM    follow
		WHERE   store_idx = #{storeIdx}
    ]]>
  </select>
  <select id="getFollowYN" resultType="java.lang.String">
    <![CDATA[
    	SELECT  CASE 
			        WHEN COUNT(*) > 0 THEN 'Y'
			        ELSE 'N'
			    END AS "followYN"
		FROM    follow
		WHERE   store_idx = #{productStoreIdx}
		AND     follow_store_idx = #{storeIdx}
    ]]>
  </select>
   <select id="getStoreReview" resultType="com.sh.dto.StoreReviewDto">
  	<![CDATA[
  		SELECT  r.writer_idx AS "storeIdx",
		        s.store_name AS "writerName",
		        r.start_cnt AS "startCnt",
		        r.review_text AS "reviewText",
		        CASE 
		            WHEN (SYSDATE - r.review_date) * 24 * 60 * 60 < 60 THEN 
		                TO_CHAR(FLOOR((SYSDATE - r.review_date) * 24 * 60 * 60)) || '초 전'
		            WHEN (SYSDATE - r.review_date) * 24 * 60 < 60 THEN 
		                TO_CHAR(FLOOR((SYSDATE - r.review_date) * 24 * 60)) || '분 전'
		            WHEN (SYSDATE - r.review_date) * 24 < 24 THEN 
		                TO_CHAR(FLOOR((SYSDATE - r.review_date) * 24)) || '시간 전'
		            WHEN SYSDATE - r.review_date >= 7 AND SYSDATE - r.review_date < 30 THEN 
		                TO_CHAR(FLOOR((SYSDATE - r.review_date) / 7)) || '주 전'
		            WHEN SYSDATE - r.review_date >= 30 AND SYSDATE - r.review_date < 365 THEN 
		                TO_CHAR(FLOOR((SYSDATE - r.review_date) / 30)) || '달 전'
		            WHEN SYSDATE - r.review_date >= 365 THEN 
		                TO_CHAR(FLOOR((SYSDATE - r.review_date) / 365)) || '년 전'
		            ELSE 
		                TO_CHAR(FLOOR(SYSDATE - r.review_date)) || '일 전'
		        END AS "elapsedDate"
		FROM    reviews r
		INNER JOIN store s
		ON      r.writer_idx = s.store_idx
		WHERE   r.store_idx = #{storeIdx}
		AND     ROWNUM <= 2
		ORDER BY r.review_date DESC
  	]]>
  </select>
  <select id="getStoreReviewCnt" resultType="Integer">
  	<![CDATA[
  		SELECT  COUNT(*) AS "reviewCnt"
		FROM    reviews
		WHERE   store_idx = #{storeIdx}
  	]]>
  </select>
  <!-- 받은코드 -->
  <select id="getStoreInfo2" resultType="com.sh.dto.StoreDto">
	<![CDATA[
		 SELECT S.STORE_IDX AS StoreIdx,
		     S.STORE_NAME AS StoreName,
		     TO_CHAR(FLOOR(SYSDATE - S.Open_Date)) || '일 전' AS OpenDate,
		     S.Introduction AS Introduction,
		     S.profile_img AS profileImg,
		     (SELECT COUNT(*) 
		      FROM store_visit SV 
		      WHERE SV.visit_store_idx = S.STORE_IDX) AS VisitCount,
		     (SELECT COUNT(*) 
		      FROM sale_history SH 
		      WHERE SH.seller_idx = S.STORE_IDX 
		        AND SH.sale_status = '구매완료') AS SellCount,
		     NVL((
		      SELECT TRUNC(AVG(R.START_CNT)) 
		      FROM reviews R 
		      WHERE R.store_idx = S.STORE_IDX
		    ), 0) AS AvgStartIdx,
		     (SELECT COUNT(*) 
		      FROM PRODUCT P 
		      WHERE P.STORE_IDX = S.STORE_IDX) AS productCount,
		     (SELECT COUNT(*) 
		      FROM REVIEWS RV 
		      WHERE RV.STORE_IDX = S.STORE_IDX) AS reviewCount,
		     (SELECT COUNT(*) 
		      FROM JJIM J 
		      WHERE J.STORE_IDX = S.STORE_IDX) AS jjimCount,
		     (SELECT COUNT(*) 
		      FROM follow F 
		      WHERE F.STORE_IDX = S.STORE_IDX) AS followerCount,
		     (SELECT COUNT(*) 
		      FROM follow F 
		      WHERE F.FOLLOW_STORE_IDX = S.STORE_IDX) AS followingCount
		 FROM STORE S
		 WHERE S.STORE_IDX = #{storeIdx}
	]]>
  </select>
  <update id="updateStoreName">
	<![CDATA[ UPDATE STORE SET store_name = #{storeName} WHERE store_idx = #{storeIdx} ]]>
  </update>
  <update id="updateStoreIntroduction">
	<![CDATA[ UPDATE STORE SET INTRODUCTION = #{storeInt} WHERE store_idx = #{storeIdx} ]]>
  </update>
</mapper>