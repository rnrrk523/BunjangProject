<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProductMapper">
  <select id="getProductList" resultType="com.sh.dto.ProductListDto">
    <![CDATA[
    	SELECT * FROM (
		    SELECT  p.product_idx AS "productIdx",
		            p.product_name AS "productName",
		            p.sale_start_date AS "saleStartDate",
		            CASE 
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60 * 60)) || '초 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60)) || '분 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24)) || '시간 전'
		                WHEN SYSDATE - p.sale_start_date >= 7 AND SYSDATE - p.sale_start_date < 30 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 7)) || '주 전'
		                WHEN SYSDATE - p.sale_start_date >= 30 AND SYSDATE - p.sale_start_date < 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 30)) || '달 전'
		                WHEN SYSDATE - p.sale_start_date >= 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 365)) || '년 전'
		                ELSE 
		                    TO_CHAR(FLOOR(SYSDATE - p.sale_start_date)) || '일 전'
		            END AS "elapsedDate",
		            p.product_img1 AS "productImg",
		            p.price AS "price"
		    FROM    product p
		    WHERE	p.sale_yn = 'N'
		    ORDER BY p.product_idx DESC
		) 
		WHERE ROWNUM>=#{rnum1} AND ROWNUM<=#{rnum2}
    ]]>
  </select>
  <select id="getProductInfo" resultType="com.sh.dto.ProductInfoDto">
    <![CDATA[
    	SELECT  p.product_idx AS "productIdx",
		        p.store_idx AS "storeIdx",
		        p.product_name AS "productName",
		        p.price AS "price",
		        p.product_img1 AS "productImg1",
		        p.product_img2 AS "productImg2",
		        p.product_img3 AS "productImg3",
		        p.all_category_idx AS "allCategoryIdx",
		        p.middle_category_idx AS "middleCategoryIdx",
		        p.sub_category_idx AS "subCategoryIdx",
		        p.sale_yn AS "saleYN",
		        p.product_size AS "productSize",
		        CASE 
		            WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 
		                TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60 * 60)) || '초 전'
		            WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 
		                TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60)) || '분 전'
		            WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 
		                TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24)) || '시간 전'
		            WHEN SYSDATE - p.sale_start_date >= 7 AND SYSDATE - p.sale_start_date < 30 THEN 
		                TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 7)) || '주 전'
		            WHEN SYSDATE - p.sale_start_date >= 30 AND SYSDATE - p.sale_start_date < 365 THEN 
		                TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 30)) || '달 전'
		            WHEN SYSDATE - p.sale_start_date >= 365 THEN 
		                TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 365)) || '년 전'
		            ELSE 
		                TO_CHAR(FLOOR(SYSDATE - p.sale_start_date)) || '일 전'
		        END AS "elapsedDate",
		        p.product_info AS "productInfo",
		        p.product_state AS "productState"
		FROM    product p
		WHERE   p.product_idx = #{productIdx}
    ]]>
  </select>
  <select id="getProductJJimCnt" resultType="Integer">
    <![CDATA[
    	SELECT  COUNT(store_idx) AS "jjimCnt"
		FROM    jjim
		WHERE   product_idx = #{productIdx}
    ]]>
  </select>
  <select id="getProductCheckCnt" resultType="Integer">
    <![CDATA[
    	SELECT  COUNT(viewed_store_idx)
		FROM    check_product
		WHERE   product_idx = #{productIdx}
    ]]>
  </select>
  <select id="getProductJJimYN" resultType="java.lang.String">
    <![CDATA[
    	SELECT 
		    CASE 
		        WHEN COUNT(*) > 0 THEN 'Y'
		        ELSE 'N'
		    END AS "jjimYN"
		FROM jjim
		WHERE product_idx = #{productIdx}
		AND store_idx = #{storeIdx}
    ]]>
  </select>
  <select id="getProductSearchList" resultType="com.sh.dto.ProductSearchListDto">
  	<![CDATA[
  		SELECT * FROM (
		    SELECT  p.product_idx AS "productIdx",
		            p.product_name AS "productName",
		            p.sale_start_date AS "saleStartDate",
		            CASE 
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60 * 60)) || '초 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60)) || '분 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24)) || '시간 전'
		                WHEN SYSDATE - p.sale_start_date >= 7 AND SYSDATE - p.sale_start_date < 30 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 7)) || '주 전'
		                WHEN SYSDATE - p.sale_start_date >= 30 AND SYSDATE - p.sale_start_date < 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 30)) || '달 전'
		                WHEN SYSDATE - p.sale_start_date >= 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 365)) || '년 전'
		                ELSE 
		                    TO_CHAR(FLOOR(SYSDATE - p.sale_start_date)) || '일 전'
		            END AS "elapsedDate",
		            p.product_img1 AS "productImg",
		            p.price AS "price",
                    p.all_category_idx AS "allCategoryIdx",
                    p.middle_category_idx AS "middleCategoryIdx",
                    p.sub_category_idx AS "subCategoryIdx"
		    FROM    product p
            WHERE   product_name LIKE #{str}
            AND		p.sale_yn = 'N'
		    ORDER BY p.sale_start_date DESC
		) 
		WHERE ROWNUM>=#{rnum1} AND ROWNUM<=#{rnum2}
  	]]>
  </select>
  
  <!-- 최신순으로 정렬하는 ajax -->
  <select id="getProductSearchSortList1" resultType="com.sh.dto.ProductSearchListDto">
  	<![CDATA[
  		SELECT * FROM (
		    SELECT  p.product_idx AS "productIdx",
		            p.product_name AS "productName",
		            p.sale_start_date AS "saleStartDate",
		            CASE 
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60 * 60)) || '초 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60)) || '분 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24)) || '시간 전'
		                WHEN SYSDATE - p.sale_start_date >= 7 AND SYSDATE - p.sale_start_date < 30 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 7)) || '주 전'
		                WHEN SYSDATE - p.sale_start_date >= 30 AND SYSDATE - p.sale_start_date < 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 30)) || '달 전'
		                WHEN SYSDATE - p.sale_start_date >= 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 365)) || '년 전'
		                ELSE 
		                    TO_CHAR(FLOOR(SYSDATE - p.sale_start_date)) || '일 전'
		            END AS "elapsedDate",
		            p.product_img1 AS "productImg",
		            p.price AS "price",
                    p.all_category_idx AS "allCategoryIdx",
                    p.middle_category_idx AS "middleCategoryIdx",
                    p.sub_category_idx AS "subCategoryIdx"
		    FROM    product p
            WHERE   product_name LIKE #{str}
            AND		p.sale_yn = 'N'
		    ORDER BY p.sale_start_date DESC
		) 
		WHERE ROWNUM>=1 AND ROWNUM<=10
  	]]>
  </select>
  <!-- 저가순으로 정렬하는 ajax -->
  <select id="getProductSearchSortList2" resultType="com.sh.dto.ProductSearchListDto">
  	<![CDATA[
  		SELECT * FROM (
		    SELECT  p.product_idx AS "productIdx",
		            p.product_name AS "productName",
		            p.sale_start_date AS "saleStartDate",
		            CASE 
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60 * 60)) || '초 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60)) || '분 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24)) || '시간 전'
		                WHEN SYSDATE - p.sale_start_date >= 7 AND SYSDATE - p.sale_start_date < 30 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 7)) || '주 전'
		                WHEN SYSDATE - p.sale_start_date >= 30 AND SYSDATE - p.sale_start_date < 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 30)) || '달 전'
		                WHEN SYSDATE - p.sale_start_date >= 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 365)) || '년 전'
		                ELSE 
		                    TO_CHAR(FLOOR(SYSDATE - p.sale_start_date)) || '일 전'
		            END AS "elapsedDate",
		            p.product_img1 AS "productImg",
		            p.price AS "price",
                    p.all_category_idx AS "allCategoryIdx",
                    p.middle_category_idx AS "middleCategoryIdx",
                    p.sub_category_idx AS "subCategoryIdx"
		    FROM    product p
            WHERE   product_name LIKE #{str}
            AND		p.sale_yn = 'N'
		    ORDER BY p.price ASC
		) 
		WHERE ROWNUM>=1 AND ROWNUM<=10
  	]]>
  </select>
  <!-- 고가순으로 정렬하는 ajax -->
  <select id="getProductSearchSortList3" resultType="com.sh.dto.ProductSearchListDto">
  	<![CDATA[
  		SELECT * FROM (
		    SELECT  p.product_idx AS "productIdx",
		            p.product_name AS "productName",
		            p.sale_start_date AS "saleStartDate",
		            CASE 
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60 * 60)) || '초 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60)) || '분 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24)) || '시간 전'
		                WHEN SYSDATE - p.sale_start_date >= 7 AND SYSDATE - p.sale_start_date < 30 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 7)) || '주 전'
		                WHEN SYSDATE - p.sale_start_date >= 30 AND SYSDATE - p.sale_start_date < 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 30)) || '달 전'
		                WHEN SYSDATE - p.sale_start_date >= 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 365)) || '년 전'
		                ELSE 
		                    TO_CHAR(FLOOR(SYSDATE - p.sale_start_date)) || '일 전'
		            END AS "elapsedDate",
		            p.product_img1 AS "productImg",
		            p.price AS "price",
                    p.all_category_idx AS "allCategoryIdx",
                    p.middle_category_idx AS "middleCategoryIdx",
                    p.sub_category_idx AS "subCategoryIdx"
		    FROM    product p
            WHERE   product_name LIKE #{str}
            AND		p.sale_yn = 'N'
		    ORDER BY p.price DESC
		) 
		WHERE ROWNUM>=1 AND ROWNUM<=10
  	]]>
  </select>
  <!-- 검색페이지 페이징처리 ajax -->
  <select id="getProductSearchPageNumList" resultType="com.sh.dto.ProductSearchListDto">
  	<![CDATA[
  		SELECT * FROM (
		    SELECT  p.product_idx AS "productIdx",
		            p.product_name AS "productName",
		            p.sale_start_date AS "saleStartDate",
		            CASE 
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60 * 60)) || '초 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60)) || '분 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24)) || '시간 전'
		                WHEN SYSDATE - p.sale_start_date >= 7 AND SYSDATE - p.sale_start_date < 30 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 7)) || '주 전'
		                WHEN SYSDATE - p.sale_start_date >= 30 AND SYSDATE - p.sale_start_date < 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 30)) || '달 전'
		                WHEN SYSDATE - p.sale_start_date >= 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 365)) || '년 전'
		                ELSE 
		                    TO_CHAR(FLOOR(SYSDATE - p.sale_start_date)) || '일 전'
		            END AS "elapsedDate",
		            p.product_img1 AS "productImg",
		            p.price AS "price",
                    p.all_category_idx AS "allCategoryIdx",
                    p.middle_category_idx AS "middleCategoryIdx",
                    p.sub_category_idx AS "subCategoryIdx"
		    FROM    product p
            WHERE   product_name LIKE #{str}
            AND		p.sale_yn = 'N'
		    ORDER BY ${sortStr}
		) 
		WHERE ROWNUM>=#{rnum1} AND ROWNUM<=#{rnum2}
  	]]>
  </select>
  <!-- 카테고리페이지 상품리스트 뽑기 -->
  <select id="getProductCategoryList" resultType="com.sh.dto.ProductSearchListDto">
  	<![CDATA[
  		SELECT 
		    q.*, 
		    (SELECT p2.product_img1 
		     FROM product p2 
		     WHERE p2.product_idx = q."productIdx") AS "productImg"
		FROM (
		    SELECT  p.product_idx AS "productIdx",
		            p.product_name AS "productName",
		            p.sale_start_date AS "saleStartDate",
		            CASE 
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60 * 60)) || '초 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24 * 60)) || '분 전'
		                WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) * 24)) || '시간 전'
		                WHEN SYSDATE - p.sale_start_date >= 7 AND SYSDATE - p.sale_start_date < 30 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 7)) || '주 전'
		                WHEN SYSDATE - p.sale_start_date >= 30 AND SYSDATE - p.sale_start_date < 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 30)) || '달 전'
		                WHEN SYSDATE - p.sale_start_date >= 365 THEN 
		                    TO_CHAR(FLOOR((SYSDATE - p.sale_start_date) / 365)) || '년 전'
		                ELSE 
		                    TO_CHAR(FLOOR(SYSDATE - p.sale_start_date)) || '일 전'
		            END AS "elapsedDate",
		            -- 정렬용 우선순위: 낮을수록 최신
		            CASE 
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 * 60 < 60 THEN 1
		                WHEN (SYSDATE - p.sale_start_date) * 24 * 60 < 60 THEN 2
		                WHEN (SYSDATE - p.sale_start_date) * 24 < 24 THEN 3
		                WHEN SYSDATE - p.sale_start_date < 7 THEN 4
		                WHEN SYSDATE - p.sale_start_date < 30 THEN 5
		                WHEN SYSDATE - p.sale_start_date < 365 THEN 6
		                ELSE 7
		            END AS "elapsedOrder",
		            p.price AS "price",
		            p.all_category_idx AS "allCategoryIdx",
		            p.middle_category_idx AS "middleCategoryIdx",
		            p.sub_category_idx AS "subCategoryIdx",
		            COUNT(cp.product_idx) AS "checkCnt"
		    FROM    product p
		    INNER JOIN check_product cp ON cp.product_idx = p.product_idx
		    WHERE   ${categoryLevel} = #{categoryIdx}
		    AND     p.sale_yn = 'N'
		    GROUP BY 
		            p.product_idx, 
		            p.product_name, 
		            p.sale_start_date,
		            p.price, 
		            p.all_category_idx,
		            p.middle_category_idx, 
		            p.sub_category_idx
		    ORDER BY "elapsedOrder" ASC, COUNT(*) DESC
		) q
		WHERE ROWNUM>=#{rnum1} AND ROWNUM<=#{rnum2}
  	]]>
  </select>
  <insert id="setProductCheck">
  	<![CDATA[
  		MERGE INTO check_product cp
		  USING dual
		  ON (cp.product_idx = #{productIdx} AND cp.viewed_store_idx = #{viewdStoreIdx})
		  WHEN NOT MATCHED THEN
		    INSERT (product_idx, viewed_store_idx)
		    VALUES (#{productIdx}, #{viewdStoreIdx})
  	]]>
  </insert>
</mapper>